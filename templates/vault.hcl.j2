{% if vault_tls_disable == True %}
{% set proto="http" %}
listener "tcp" {
  address     = "{{ vault_client_addr }}:{{ vault_http_port }}"
  tls_disable = "{{ vault_tls_disable }}"
}
{% else %}
{% set proto="https" %}
listener "tcp" {
  address       = "{{ vault_client_addr }}:{{ vault_http_port }}"
  tls_cert_file = "{{ vault_tls_directory }}/{{ vault_tls_cert_file | basename }}"
  tls_key_file  = "{{ vault_tls_directory }}/{{ vault_tls_key_file  | basename }}"
  tls_disable_client_certs = "{{ vault_tls_disable_client_certs }}"
}
{% endif %}

{% if vault_storage_backend == "integrated" %}
storage "raft" {
  path    = "{{ vault_data_directory }}/raft"
  node_id = "{{ ansible_fqdn }}"
{% for vault_server in groups['vault'] if not server == ansible_fqdn %}
  retry_join {
    leader_api_addr = "{{ proto }}://{{ vault_server }}:{{ vault_http_port }}"
  }
{% endfor %}
}
{% elif vault_storage_backend == "consul" %}
storage "consul" {
  address = "127.0.0.1:{{ consul_http_port }}"
  scheme  = "{{ consul_scheme }}"
  path    = "{{ consul_vault_kv_path }}"
{% if consul_vault_acl_token is defined %}
  token   = "{{ consul_vault_acl_token }}"
{% endif %}
{% if consul_tls_enabled %}
  tls_ca_file     = "{{ consul_tls_directory }}/{{ consul_tls_ca_file | basename }}"
  tls_cert_file   = "{{ consul_tls_directory }}/{{ consul_tls_cert_file | basename }}"
  tls_key_file    = "{{ consul_tls_directory }}/{{ consul_tls_key_file | basename }}"
  tls_skip_verify = "{{ consul_tls_skip_verify }}"
{% endif %}
}
{% else %}
storage "file" {
  path = "{{ vault_data_directory }}/data"
}
{% endif %}

{% if vault_seal_type == "gcpkms" %}
seal "gcpckms" {
  project     = "{{ vault_seal_gcp_project }}"
  region      = "{{ vault_seal_gcp_region }}"
  key_ring    = "{{ vault_seal_gcp_key_ring }}"
  crypto_key  = "{{ vault_seal_gcp_crypto_key }}"
}
{% elif vault_seal_type == "pkcs11" %}
seal "pkcs11" { 
  lib            = "{{ vault_hsm_crypto_library }}"
  slot           = "{{ vault_hsm_slot }}"
  pin            = "{{ vault_hsm_pin }}"
  generate_key   = "{{ vault_hsm_generate_key }}"
  key_label      = "{{ vault_hsm_key_label }}"
  hmac_key_label = "{{ vault_hsm_hmac_key_label }}"
}
{% endif %}

disable_mlock    = "{{ vault_disable_mlock }}"
api_addr         = "{{ proto }}://{{ ansible_fqdn }}:{{ vault_http_port }}"
cluster_addr     = "{{ proto }}://{{ ansible_fqdn }}:{{ vault_api_port }}"
ui               = "{{ vault_ui }}"
